---
- hosts: all
  name: OpenStack AI Code Review
  tasks:
    - name: Verify OpenCode installation
      command: opencode --version
      register: opencode_version

    - name: Display OpenCode version
      debug:
        msg: "Using OpenCode version: {{ opencode_version.stdout }}"

    - name: Ensure OpenCode config directory exists
      file:
        path: "{{ opencode_config_dir }}"
        state: directory
        mode: '0755'

    - name: Ensure agents directory exists
      file:
        path: "{{ agents_target_dir }}"
        state: directory
        mode: '0755'

    - name: Deploy OpenCode configuration
      copy:
        content: |
          {
            "$schema": "https://opencode.ai/config.json",
            "provider": {
              "litellm-homelab": {
                "npm": "@ai-sdk/openai-compatible",
                "name": "LiteLLM Homelab",
                "options": {
                  "baseURL": "{{ litellm_base_url }}",
                  "apiKey": "{{ litellm_api_key }}"
                },
                "models": {
                  "glm-4.6": {
                    "name": "GLM-4.6 (via LiteLLM)"
                  },
                  "glm-4.5-air": {
                    "name": "GLM-4.5 Air (via LiteLLM)"
                  },
                  "glm-4.5-flash": {
                    "name": "GLM-4.5 Flash (via LiteLLM)"
                  }
                }
              }
            }
          }
        dest: "{{ opencode_config_dir }}/opencode.json"
        mode: '0644'

    - name: Copy agents from style guide repo
      synchronize:
        src: "{{ agents_source_dir }}/"
        dest: "{{ agents_target_dir }}/"
        recursive: yes
        rsync_opts:
          - "--exclude=*.pyc"
          - "--exclude=__pycache__"
      delegate_to: "{{ inventory_hostname }}"

    - name: Verify agents copied
      find:
        paths: "{{ agents_target_dir }}"
        patterns: "*.md"
      register: agent_files

    - name: Display available agents
      debug:
        msg: "Found {{ agent_files.matched }} agent files: {{ agent_files.files | map(attribute='path') | list }}"

    - name: Ensure output directories exist
      file:
        path: "{{ review_output_dir }}"
        state: directory
        mode: '0755'

    - name: Display job context
      debug:
        msg: |
          Job: {{ zuul.job }}
          Project: {{ zuul.project.name }}
          Change: {{ zuul.change }} PS{{ zuul.patchset }}
          Branch: {{ zuul.branch }}
          Workspace: {{ ansible_user_dir }}
          Context Model: {{ context_model }}
          Review Model: {{ review_model }}
          Agents Dir: {{ agents_target_dir }}

    - name: Extract Zuul execution context
      include_tasks: extract-context.yaml

    - name: Analyze commit
      include_tasks: analyze-commit.yaml

    - name: Perform code review
      include_tasks: perform-review.yaml

    - name: Collect and format results
      include_tasks: collect-results.yaml

  post_tasks:
    - name: Ensure review outputs are collected
      synchronize:
        src: "{{ review_output_dir }}/"
        dest: "{{ ansible_user_dir }}/logs/"
        mode: pull
      ignore_errors: true
